{"version":3,"sources":["components/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","today","Date","intervalId","this","window","setInterval","setState","prevProps","prevState","name","props","clearInterval","className","toUTCString","slice","React","Component","getRandomName","value","now","toString","App","clockName","hasClock","timerId","RemoveClock","event","preventDefault","ShowClock","document","addEventListener","removeEventListener","ReactDOM","render","getElementById"],"mappings":"sNAUaA,EAAb,4MACEC,MAAQ,CACNC,MAAO,IAAIC,MAFf,EAKEC,WAAa,EALf,uDAOE,WAAqB,IAAD,OAClBC,KAAKD,WAAaE,OAAOC,aAAY,WACnC,IAAML,EAAQ,IAAIC,KAElB,EAAKK,SAAS,CAAEN,YACf,OAZP,gCAeE,SACEO,EAAiCC,GAE7BD,EAAUE,KAASN,KAAKO,MAAMD,KAI9BD,EAAUR,MAAUG,KAAKJ,MAAMC,QAtBvC,kCA2BE,WACEI,OAAOO,cAAcR,KAAKD,cA5B9B,oBA+BE,WACE,IAAQF,EAAUG,KAAKJ,MAAfC,MACAS,EAASN,KAAKO,MAAdD,KAER,OACE,sBAAKG,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGH,IAEF,YACD,sBAAMG,UAAU,cAAhB,SACGZ,EAAMa,cAAcC,OAAO,IAAK,YA1C3C,GAA2BC,IAAMC,WCkCjC,SAASC,IACP,IAAMC,EAAQjB,KAAKkB,MAAMC,WAAWN,OAAO,GAE3C,MAAM,SAAN,OAAgBI,GAQX,IAAMG,EAAb,4MACEtB,MAAQ,CACNuB,UAAW,UACXC,UAAU,GAHd,EAMEC,QAAUpB,OAAOC,aAAY,WAC3B,EAAKC,SAAS,CAAEgB,UAAWL,QAC1B,MARL,EAoBEQ,YAAc,SAACC,GACbA,EAAMC,iBACN,EAAKrB,SAAS,CAAEiB,UAAU,KAtB9B,EAyBEK,UAAY,WACV,EAAKtB,SAAS,CAAEiB,UAAU,KA1B9B,uDAUE,WACEM,SAASC,iBAAiB,cAAe3B,KAAKsB,aAC9CI,SAASC,iBAAiB,QAAS3B,KAAKyB,aAZ5C,kCAeE,WACEC,SAASE,oBAAoB,cAAe5B,KAAKsB,aACjDI,SAASE,oBAAoB,QAAS5B,KAAKyB,aAjB/C,oBA6BE,WACE,MAAgCzB,KAAKJ,MAA7BuB,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,SAEnB,OACE,sBAAKX,UAAU,MAAf,UACE,6CACCW,GAAY,cAAC,EAAD,CAAOd,KAAMa,WAnClC,GAAyBP,IAAMC,WCpD/BgB,IAASC,OACP,cAAC,EAAD,IACAJ,SAASK,eAAe,W","file":"static/js/main.d49e7e39.chunk.js","sourcesContent":["import React from 'react';\n\ntype State = {\n  today: Date,\n};\n\ntype ClockProps = {\n  name: string,\n};\n\nexport class Clock extends React.Component<ClockProps, State> {\n  state = {\n    today: new Date(),\n  };\n\n  intervalId = 0;\n\n  componentDidMount() {\n    this.intervalId = window.setInterval(() => {\n      const today = new Date();\n\n      this.setState({ today });\n    }, 1000);\n  }\n\n  componentDidUpdate(\n    prevProps: Readonly<ClockProps>, prevState: Readonly<State>,\n  ) {\n    if (prevProps.name !== this.props.name) {\n    //   console.debug(`Renamed from ${prevProps.name} to ${this.props.name}`);\n    }\n\n    if (prevState.today !== this.state.today) {\n    //   console.info(this.state.today.toUTCString().slice(-12, -4));\n    }\n  }\n\n  componentWillUnmount() {\n    window.clearInterval(this.intervalId);\n  }\n\n  render() {\n    const { today } = this.state;\n    const { name } = this.props;\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {name}\n        </strong>\n        {' time is '}\n        <span className=\"Clock__time\">\n          {today.toUTCString().slice(-12, -4)}\n        </span>\n      </div>\n    );\n  }\n}\n","// import React from 'react';\n// import './App.scss';\n\n// function getRandomName(): string {\n//   const value = Date.now().toString().slice(-4);\n\n//   return `Clock-${value}`;\n// }\n\n// export const App: React.FC = () => {\n//   const today = new Date();\n//   let clockName = 'Clock-0';\n\n//   // This code starts a timer\n//   const timerId = window.setInterval(() => {\n//     clockName = getRandomName();\n//   }, 3300);\n\n//   // this code stops the timer\n//   window.clearInterval(timerId);\n\n//   return (\n//     <div className=\"App\">\n//       <h1>React clock</h1>\n\n//       <div className=\"Clock\">\n//         <strong className=\"Clock__name\">\n//           {clockName}\n//         </strong>\n\n//         {' time is '}\n\n//         <span className=\"Clock__time\">\n//           {today.toUTCString().slice(-12, -4)}\n//         </span>\n//       </div>\n//     </div>\n//   );\n// };\n\nimport React from 'react';\nimport './App.scss';\nimport { Clock } from './components/Clock';\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\ntype State = {\n  clockName: string,\n  hasClock: boolean,\n};\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    clockName: 'Clock-0',\n    hasClock: true,\n  };\n\n  timerId = window.setInterval(() => {\n    this.setState({ clockName: getRandomName() });\n  }, 3300);\n\n  componentDidMount(): void {\n    document.addEventListener('contextmenu', this.RemoveClock);\n    document.addEventListener('click', this.ShowClock);\n  }\n\n  componentWillUnmount(): void {\n    document.removeEventListener('contextmenu', this.RemoveClock);\n    document.removeEventListener('click', this.ShowClock);\n  }\n\n  RemoveClock = (event: MouseEvent) => {\n    event.preventDefault();\n    this.setState({ hasClock: false });\n  };\n\n  ShowClock = () => {\n    this.setState({ hasClock: true });\n  };\n\n  render() {\n    const { clockName, hasClock } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        {hasClock && <Clock name={clockName} />}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}